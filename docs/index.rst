sk-config: extensible configuration file parser for C++
=======================================================

.. toctree::
   :hidden: 
   :maxdepth: 2
   :caption: Contents:

   file_format.rst
   includes.rst
   types.rst
   api.rst
   custom_parser.rst
   parser_policy.rst

sk-config is a configuration file parser for C++.  It parses *named*-style
configuration files, which are easy for humans to read and write, and are
familiar to users.

sk-config is based on the Spirit X3 parser framework.  For most use-cases,
it completely hides the details of Spirit and provides a simple API that
allows parsers to be created quickly and easily.  For more advanced use-cases,
it allows the user to provide custom Spirit parsers where needed, and it
can even be embedded into a larger Spirit parser.

Example
-------

Suppose we have a configuration file which looks like this:

.. code-block::

    user "alice" {
        password "letmein";
    };

    user "bob" {
        password "securepassword";
    };

    access {
        allow alice, bob;
    };

We can create a parser like this:

.. code-block:: c++

    #include <sk/config.hxx>

    struct user {
        std::string name;
        std::string password;
    };

    struct access_config {
        std::vector<std::string> allow_users;
    };

    struct config {
        std::map<std::string, user> users;
        access_config access;
    };

    int main(int argc, char **argv) {
        namespace cfg = sk::config;

        auto grammar = cfg::config<config>(

            cfg::block<user>("user", &user::name, &config::users,
                cfg::option("password", &user::password)),

            cfg::block<access_config>("access", &config::access,
                cfg::option("allow", &access_config::allow_users))
        );

        config loaded_config;
        try {
            cfg::parse_file(argv[1], grammar, loaded_config);
        } catch (cfg::parse_error const &e) {
            std::cerr << e;
            return 1;
        }
    }

Supported compilers
-------------------

sk-config is tested with:

* MSVC 19.28 (VS 16.9) on Windows
* Clang 11.0.1 on Windows
* Clang 10.0.0 on Linux
* GCC 10.2.0 on Linux

License and copyright
---------------------

sk-config is copyright (c) 2019, 2020, 2021 SiKol Ltd.  It is distributed
under the terms of the Boost Software License.

.. code-block:: none

  Boost Software License - Version 1.0 - August 17th, 2003
 
  Permission is hereby granted, free of charge, to any person or organization
  obtaining a copy of the software and accompanying documentation covered by
  this license (the "Software") to use, reproduce, display, distribute,
  execute, and transmit the Software, and to prepare derivative works of the
  Software, and to permit third-parties to whom the Software is furnished to
  do so, all subject to the following:
 
  The copyright notices in the Software and this entire statement, including
  the above license grant, this restriction and the following disclaimer,
  must be included in all copies of the Software, in whole or in part, and
  all derivative works of the Software, unless such copies or derivative
  works are solely in the form of machine-executable object code generated by
  a source language processor.
 
  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  DEALINGS IN THE SOFTWARE.

Indices and tables
------------------

* :ref:`genindex`
* :ref:`modindex`
* :ref:`search`
